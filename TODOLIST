	TODOLIST

NOTE: this is mostly a personal document that I use to keep track of what I'm
currently doing and what I have planned, don't expect any correct or important
information in here.

Currently the kernel doesn't do much other than boot and print some messages to
the QEMU debugcon port (port 0xe9).

Planned features, in rough order of implementation:

- Async work scheduling
  - Allow processors in normal and IRQ context to schedule work to run in normal
    context on the same CPU. Useful for e.g. (non-smpboot) TSC synchronization,
    where one CPU needs to send an IPI to another CPU while avoiding deadlock.

- Longterm: Make printk NMI-safe
  - In printk_emit_message(), disable IRQs when printing
  - If during NMI, store the message to a per-CPU message buffer and signal a
    self-IPI (which will be handled the next time IRQs are enabled after
    returning from NMI context).

- Longterm: Userspace
  - Start out very basic, for example by mapping the initrd at a fixed address
    and jumping to it.
