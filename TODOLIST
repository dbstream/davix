	TODOLIST

NOTE: this is mostly a personal document that I use to keep track of what I'm
currently doing and what I have planned, don't expect any correct or important
information in here.

Currently the kernel doesn't do much other than boot and print some messages to
the framebuffer device, if there is one.

Planned changes:

- Implement a kernel backtrace mechanism.

  - Implement an address->symbol mapping scheme so we can print symbol names
    instead of addresses.

  - Perform DWARF unwinding in an offline tool that generates information in a
    kernel-internal format.

- Implement missing uACPI kernel APIs.

  - Implement PCI configuration space access.

  - Implement GPE work and notify work queues.

  - Implement semaphores.

- Have file contents.

  - Implement a page cache that can be (ab)used by tmpfs to store file contents.

  - Change the boot module to be a 'real' initrd that we unpack into root tmpfs
    and execve(/init) from.


